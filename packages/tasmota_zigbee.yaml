#Replace 0xA3EF with your device short id
binary_sensor:
#DS Baby room
- platform: mqtt
  name: "Baby room Door"
  state_topic: "tele/zigbee/0xA3EF/Occupancy"  
  json_attributes_topic: "tele/zigbee/0xA3EF/Attr"
  #expire_after: 7200   #v0.100 and above
  device_class: opening
  payload_off: '0'
  payload_on: '1'

#DS Garage inside soor
- platform: mqtt
  name: "Garage inside Door"
  state_topic: "tele/zigbee/0x2040/Occupancy"  
  json_attributes_topic: "tele/zigbee/0x2040/Attr"
  #expire_after: 7200   #v0.100 and above
  device_class: opening
  payload_off: '0'
  payload_on: '1'

sensor:  
#TH Outside
- platform: mqtt
  name: "Outside Temperature"
  state_topic: "tele/zigbee/0x9870/Temperature"
  json_attributes_topic: "tele/zigbee/0x9870/Attr"
  unit_of_measurement: "°C" 
  expire_after: 7200
- platform: mqtt
  name: "Outside Humidity"
  state_topic: "tele/zigbee/0x9870/Humidity"
  unit_of_measurement: "RH%" 
  expire_after: 7200

#TH Braai
- platform: mqtt
  name: "Braai room Temperature"
  state_topic: "tele/zigbee/0x7064/Temperature"
  json_attributes_topic: "tele/zigbee/0x7064/Attr"
  unit_of_measurement: "°C" 
  expire_after: 7200
- platform: mqtt
  name: "Braai room Humidity"
  state_topic: "tele/zigbee/0x7064/Humidity"
  unit_of_measurement: "RH%" 
  expire_after: 7200

#TH Scullery
- platform: mqtt
  name: "Scullery Temperature"
  state_topic: "tele/zigbee/0x785A/Temperature"
  json_attributes_topic: "tele/zigbee/0x785A/Attr"
  unit_of_measurement: "°C" 
  expire_after: 7200
- platform: mqtt
  name: "Scullery Humidity"
  state_topic: "tele/zigbee/0x785A/Humidity"
  unit_of_measurement: "RH%" 
  expire_after: 7200

#TH Main bed
- platform: mqtt
  name: "Main bed room Temperature"
  state_topic: "tele/zigbee/0x632C/Temperature"
  json_attributes_topic: "tele/zigbee/0x632C/Attr"
  unit_of_measurement: "°C" 
  expire_after: 7200
- platform: mqtt
  name: "Main bed room Humidity"
  state_topic: "tele/zigbee/0x632C/Humidity"
  unit_of_measurement: "RH%" 
  expire_after: 7200

#TH Main bath
- platform: mqtt
  name: "Main Bath room Temperature"
  state_topic: "tele/zigbee/0x75D2/Temperature"
  json_attributes_topic: "tele/zigbee/0x75D2/Attr"
  unit_of_measurement: "°C" 
  expire_after: 7200
- platform: mqtt
  name: "Main Bath room Humidity"
  state_topic: "tele/zigbee/0x75D2/Humidity"
  unit_of_measurement: "RH%" 
  expire_after: 7200

#TH Lounge
- platform: mqtt
  name: "Lounge Temperature"
  state_topic: "tele/zigbee/0x4D67/Temperature"
  json_attributes_topic: "tele/zigbee/0x4D67/Attr"
  unit_of_measurement: "°C" 
  expire_after: 7200
- platform: mqtt
  name: "Lounge Humidity"
  state_topic: "tele/zigbee/0x4D67/Humidity"
  unit_of_measurement: "RH%" 
  expire_after: 7200

#TH Fridge
- platform: mqtt
  name: "Fridge Temperature"
  state_topic: "tele/zigbee/0x2C10/Temperature"
  json_attributes_topic: "tele/zigbee/0x2C10/Attr"
  unit_of_measurement: "°C" 
  expire_after: 7200
- platform: mqtt
  name: "Fridge Humidity"
  state_topic: "tele/zigbee/0x2C10/Humidity"
  unit_of_measurement: "RH%" 
  expire_after: 7200

#TH Baby room
- platform: mqtt
  name: "Baby room Temperature"
  state_topic: "tele/zigbee/0xC46A/Temperature"
  json_attributes_topic: "tele/zigbee/0xC46A/Attr"
  unit_of_measurement: "°C" 
  expire_after: 7200
- platform: mqtt
  name: "Baby room Humidity"
  state_topic: "tele/zigbee/0xC46A/Humidity"
  unit_of_measurement: "RH%" 
  expire_after: 7200


automation:
  ## Zigbee2tasmota MQTT demultiplexer automations
  - alias: 'MQTT Zigbee Occupancy'
    initial_state: true
    trigger:
      - platform: mqtt
        topic: 'tele/tasmota_zbbridge/SENSOR'
    condition:
      - condition: template
        value_template: >
          {{ 'Occupancy' in ((trigger.payload_json.ZbReceived.values() | list)[0].keys() | list) }}
    action:
      - service: mqtt.publish
        data_template:
          topic: > 
            tele/zigbee/{{ (trigger.payload_json.ZbReceived.keys() | list)[0] }}/Occupancy
          payload: >
            {% set code = (trigger.payload_json.ZbReceived.keys() | list)[0] %}
            {{ trigger.payload_json.ZbReceived[code].Occupancy }}

  - alias: 'MQTT Zigbee Humidity'
    initial_state: true
    trigger:
      - platform: mqtt
        topic: 'tele/tasmota_zbbridge/SENSOR'
    condition:
      - condition: template
        value_template: >
          {{ 'Humidity' in ((trigger.payload_json.ZbReceived.values() | list)[0].keys() | list) }}
    action:
      - service: mqtt.publish
        data_template:
          topic: > 
            tele/zigbee/{{ (trigger.payload_json.ZbReceived.keys() | list)[0] }}/Humidity
          payload: >
            {% set code = (trigger.payload_json.ZbReceived.keys() | list)[0] %}
            {{ trigger.payload_json.ZbReceived[code].Humidity }}

  - alias: 'MQTT Zigbee Temperature'
    initial_state: true
    trigger:
      - platform: mqtt
        topic: 'tele/tasmota_zbbridge/SENSOR'
    condition:
      - condition: template
        value_template: >
          {{ 'Temperature' in ((trigger.payload_json.ZbReceived.values() | list)[0].keys() | list) }}
    action:
      - service: mqtt.publish
        data_template:
          topic: > 
            tele/zigbee/{{ (trigger.payload_json.ZbReceived.keys() | list)[0] }}/Temperature
          payload: >
            {% set code = (trigger.payload_json.ZbReceived.keys() | list)[0] %}
            {{ trigger.payload_json.ZbReceived[code].Temperature }}

  - alias: 'MQTT Zigbee Pressure'
    initial_state: true
    trigger:
      - platform: mqtt
        topic: 'tele/tasmota_zbbridge/SENSOR'
    condition:
      - condition: template
        value_template: >
          {{ 'Pressure' in ((trigger.payload_json.ZbReceived.values() | list)[0].keys() | list) }}
    action:
      - service: mqtt.publish
        data_template:
          topic: > 
            tele/zigbee/{{ (trigger.payload_json.ZbReceived.keys() | list)[0] }}/Pressure
          payload: >
            {% set code = (trigger.payload_json.ZbReceived.keys() | list)[0] %}
            {{ trigger.payload_json.ZbReceived[code].Pressure }}

  - alias: 'MQTT Zigbee Illuminance'
    initial_state: true
    trigger:
      - platform: mqtt
        topic: 'tele/tasmota_zbbridge/SENSOR'
    condition:
      - condition: template
        value_template: >
          {{ 'Illuminance' in ((trigger.payload_json.ZbReceived.values() | list)[0].keys() | list) }}
    action:
      - service: mqtt.publish
        data_template:
          topic: > 
            tele/zigbee/{{ (trigger.payload_json.ZbReceived.keys() | list)[0] }}/Illuminance
          payload: >
            {% set code = (trigger.payload_json.ZbReceived.keys() | list)[0] %}
            {{ trigger.payload_json.ZbReceived[code].Illuminance }}

  - alias: 'MQTT Zigbee Attribute'
    initial_state: true
    trigger:
      - platform: mqtt
        topic: 'tele/tasmota_zbbridge/SENSOR'
    condition:
      - condition: template
        value_template: "{{ 'BatteryPercentage' in ((trigger.payload_json.ZbReceived.values() | list)[0].keys() | list) }}"
      - condition: template
        value_template: "{{ 'BatteryVoltage' in ((trigger.payload_json.ZbReceived.values() | list)[0].keys() | list) }}"
    action:
      - service: mqtt.publish
        data_template:
          topic: tele/zigbee/{{ (trigger.payload_json.ZbReceived.keys() | list)[0] }}/Attr
          payload: >
            {% set code = (trigger.payload_json.ZbReceived.keys() | list)[0] %}
            {"voltage":{{ trigger.payload_json.ZbReceived[code].BatteryVoltage }},"battery level":{{ trigger.payload_json.ZbReceived[code].BatteryPercentage }}}
